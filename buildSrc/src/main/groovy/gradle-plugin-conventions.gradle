plugins {
   id "java-conventions"
   id "com.gradle.plugin-publish"
   id "com.github.johnrengelman.shadow"
}

shadowJar {
    archiveClassifier = ""
    dependencies {
       exclude(dependency {
           it.moduleGroup != project.group
       })
    }
}

dependencies {
    shadow platform(project(":jdoc-platform"))
}

def shadowDeps(Project project) {
    def configuration = project.configurations.findByName("runtimeClasspath")
    if (configuration != null) {
        for (def dep : configuration.allDependencies) {
            if (dep.group == rootProject.group) {
                shadowDeps(dep.dependencyProject)
            } else {
                dependencies {
                    shadow "$dep.group:$dep.name"
                }
            }
        }
    }
}

gradle.projectsEvaluated {
    shadowDeps(project)
}

publishing {
    publications {
        pluginMaven(MavenPublication) {
            versionMapping {
                allVariants {
                    fromResolutionResult()
                }
            }
            pom.withXml {
                asNode().remove(asNode().get("dependencyManagement"))
            }
        }
    }
}