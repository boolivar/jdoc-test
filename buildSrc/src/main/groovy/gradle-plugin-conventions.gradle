plugins {
   id "java-conventions"
   id "com.gradle.plugin-publish"
   id "com.github.johnrengelman.shadow"
}

def shadowJdoc(Project project) {
    def configuration = project.configurations.findByName("runtimeClasspath")
    if (configuration != null) {
        for (def dep : configuration.allDependencies) {
            if (dep.group == project.group) {
                shadowJdoc(dep.dependencyProject)
            } else {
                dependencies {
                    shadow "$dep.group:$dep.name"
                }
            }
        }
    }
}

afterEvaluate {
    shadowJdoc(project)
}

shadowJar {
    archiveClassifier = ""
    dependencies {
        exclude(dependency {
            it.moduleGroup != project.group
        })
    }
}

publishing {
    publications {
        pluginMaven(MavenPublication) {
            versionMapping {
                allVariants {
                    fromResolutionResult()
                }
            }
            pom.withXml {
                asNode().remove(asNode().get("dependencyManagement"))
            }
        }
    }
}